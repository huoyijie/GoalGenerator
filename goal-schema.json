{
    "$id": "https://raw.githubusercontent.com/huoyijie/GoalGenerator/master/schema.json",
    "$schema": "https://json-schema.org/draft-07/schema",
    "title": "GoalGenerator Schema",
    "description": "Define a model with CRUD required",
    "type": "object",
    "required": ["package", "name", "fields"],
    "properties": {
        "package": {
            "type": "string",
            "description": "name of package"
        },
        "name": {
            "type": "string",
            "description": "name of type"
        },
        "database": {
            "type": "object",
            "description": "rules of database [embeddingbase]",
            "properties": {
                "embeddingbase": {
                    "type": "boolean",
                    "description": "embedding base for (ID, CreatedAt, UpdateAt...)",
                    "examples": [true]
                }
            }
        },
        "view": {
            "type": "object",
            "description": "rules of view [lazy]",
            "properties": {
                "lazy": {
                    "type": "boolean",
                    "description": "lazy load for datatable pagination",
                    "examples": [true]
                }
            }
        },
        "fields": {
            "type": "array",
            "description": "fields of type",
            "items": {
                "type": "object",
                "description": "properties of field [name, database, view, validator]",
                "required": ["name", "view"],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "name of field"
                    },
                    "database": {
                        "type": "object",
                        "description": "rules of database [primarykey, unique, index]",
                        "properties": {
                            "primarykey": {
                                "type": "boolean",
                                "description": "field is a primary key",
                                "examples": [true]
                            },
                            "unique": {
                                "type": "boolean",
                                "description": "field is unique",
                                "examples": [true]
                            },
                            "index": {
                                "type": "boolean",
                                "description": "field is a index",
                                "examples": [true]
                            }
                        }
                    },
                    "view": {
                        "type": "object",
                        "description": "rules of view [name, belongto, uploadto, sortable, asc, desc, globalsearch, secret, hidden, readonly, postonly, autowired, filter, showtime, showicon, uint, float]",
                        "required": ["name"],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "name of view component",
                                "enum": ["number", "uuid", "switch", "text", "password", "dropdown", "calendar", "file"]
                            },
                            "belongto": {
                                "type": "string",
                                "description": "used with dropdown",
                                "examples": ["auth.User.Username"]
                            },
                            "uploadto": {
                                "type": "string",
                                "description": "used with file",
                                "examples": ["uploads"]
                            },
                            "sortable": {
                                "type": "boolean",
                                "description": "field is sortable",
                                "examples": [true]
                            },
                            "asc": {
                                "type": "boolean",
                                "description": "presort asc",
                                "examples": [true]
                            },
                            "desc": {
                                "type": "boolean",
                                "description": "presort desc",
                                "examples": [true]
                            },
                            "globalsearch": {
                                "type": "boolean",
                                "description": "can global search this field",
                                "examples": [true]
                            },
                            "secret": {
                                "type": "boolean",
                                "description": "field is secret (such as a password)",
                                "examples": [true]
                            },
                            "hidden": {
                                "type": "boolean",
                                "description": "field is hidden from datatable list",
                                "examples": [true]
                            },
                            "readonly": {
                                "type": "boolean",
                                "description": "field is readonly",
                                "examples": [true]
                            },
                            "postonly": {
                                "type": "boolean",
                                "description": "field is postonly",
                                "examples": [true]
                            },
                            "autowired": {
                                "type": "boolean",
                                "description": "field is autowired",
                                "examples": [true]
                            },
                            "filter": {
                                "type": "boolean",
                                "description": "filter field",
                                "examples": [true]
                            },
                            "showtime": {
                                "type": "boolean",
                                "description": "used with calendar",
                                "examples": [true]
                            },
                            "showicon": {
                                "type": "boolean",
                                "description": "used with calendar",
                                "examples": [true]
                            },
                            "uint": {
                                "type": "boolean",
                                "description": "used with number",
                                "examples": [true]
                            },
                            "float": {
                                "type": "boolean",
                                "description": "used with number",
                                "examples": [true]
                            }
                        }
                    },
                    "validator": {
                        "type": "object",
                        "description": "rules of validator [required, email, alphanum, alpha, min, max, len]",
                        "properties": {
                            "required": {
                                "type": "boolean",
                                "description": "field is required",
                                "examples": [true]
                            },
                            "email": {
                                "type": "boolean",
                                "description": "field is a email",
                                "examples": [true]
                            },
                            "alphanum": {
                                "type": "boolean",
                                "description": "field only contains alpha or number",
                                "examples": [true]
                            },
                            "alpha": {
                                "type": "boolean",
                                "description": "field only contains alpha",
                                "examples": [true]
                            },
                            "min": {
                                "type": "integer",
                                "minimum": 0,
                                "description": "minimum value of number or length of string",
                                "examples": [0]
                            },
                            "max": {
                                "type": "integer",
                                "exclusiveMinimum": 0,
                                "description": "maximum value of number or length of string",
                                "examples": [100]
                            },
                            "len": {
                                "type": "integer",
                                "exclusiveMinimum": 0,
                                "description": "length of string",
                                "examples": [20]
                            }
                        }
                    }
                }
            }
        }
    }
}